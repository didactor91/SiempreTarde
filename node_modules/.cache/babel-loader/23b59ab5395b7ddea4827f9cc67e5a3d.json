{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar classNames = require(\"classnames\");\n\nvar React = require(\"react\");\n\nvar bulma_1 = require(\"./../bulma\");\n\nvar helpers_1 = require(\"./../helpers\");\n\nfunction Button(props) {\n  var className = classNames('button', tslib_1.__assign({\n    'is-inverted': props.isInverted,\n    'is-link': props.isLink,\n    'is-outlined': props.isOutlined,\n    'is-static': props.isStatic\n  }, helpers_1.combineModifiers(props, bulma_1.getStateModifiers, bulma_1.getColorModifiers, bulma_1.getLoadingModifiers, bulma_1.getSizeModifiers)), props.className);\n\n  var render = props.render,\n      isLink = props.isLink,\n      isOutlined = props.isOutlined,\n      isInverted = props.isInverted,\n      isStatic = props.isStatic,\n      rest = tslib_1.__rest(props, [\"render\", \"isLink\", \"isOutlined\", \"isInverted\", \"isStatic\"]);\n\n  var HTMLProps = helpers_1.getHTMLProps(rest, bulma_1.removeStateProps, bulma_1.removeColorProps, bulma_1.removeLoadingProps, bulma_1.removeSizeProps);\n  if (render) return render(tslib_1.__assign({}, HTMLProps, {\n    className: className\n  }));\n  var anchor = React.createElement(\"a\", tslib_1.__assign({}, HTMLProps, {\n    role: \"button\",\n    className: className\n  }));\n  var button = React.createElement(\"button\", tslib_1.__assign({}, HTMLProps, {\n    type: props.type || 'button',\n    className: className\n  }));\n  return props.href ? anchor : button;\n}\n\nexports.Button = Button;\nvar HOC = bulma_1.withHelpersModifiers(Button);\nexports.default = HOC;","map":null,"metadata":{},"sourceType":"script"}
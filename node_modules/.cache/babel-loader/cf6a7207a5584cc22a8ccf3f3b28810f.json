{"ast":null,"code":"import validate from '../../common/validate';\nimport call from '../../common/call';\nimport { NotFoundError, ConnectionError, NoDataError } from '../../common/errors';\nconst iBusApi = {\n  APP_ID: null,\n  APP_KEY: null,\n  __url__: 'https://api.tmb.cat/v1/ibus',\n  __timeout__: 0,\n\n  retrieveStopId(stop_id) {\n    validate.arguments([{\n      name: 'stop',\n      value: stop_id,\n      type: 'number',\n      notEmpty: true,\n      optional: false\n    }]);\n    return call(\"\".concat(this.__url__, \"/stops/\").concat(stop_id, \"?app_id=\").concat(this.APP_ID, \"&app_key=\").concat(this.APP_KEY), {\n      timeout: this.__timeout__\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      if (response.status === 404) throw new NotFoundError('cannot found');\n      if (response.status === 403) throw new ConnectionError('cannot connect');\n    }).then(response => {\n      const ibus = response.data.ibus;\n\n      if (ibus === undefined) {\n        throw new NoDataError('no data recived');\n      } else {\n        return response;\n      }\n    });\n  },\n\n  retrieveLineId(stop_id, line_id) {\n    validate.arguments([{\n      name: 'stop',\n      value: stop_id,\n      type: 'number',\n      notEmpty: true,\n      optional: false\n    }, {\n      name: 'line',\n      value: line_id,\n      type: 'number',\n      notEmpty: true,\n      optional: false\n    }]);\n    return call(\"\".concat(this.__url__, \"/lines/\").concat(line_id, \"/stops/\").concat(stop_id, \"?app_id=\").concat(this.APP_ID, \"&app_key=\").concat(this.APP_KEY), {\n      timeout: this.__timeout__\n    }).then(response => {\n      if (response.status === 200) {\n        return response.json();\n      }\n\n      if (response.status === 404) throw new NotFoundError('cannot found');\n      if (response.status === 403) throw new ConnectionError('cannot connect');\n    }).then(response => {\n      const ibus = response.data.ibus;\n\n      if (ibus === undefined) {\n        throw new NoDataError('no data recived');\n      } else {\n        return response;\n      }\n    });\n  }\n\n};\nexport default iBusApi;","map":{"version":3,"sources":["/Users/didactor/Documents/skylab/bootcamp/collab/skylab-bootcamp-201904/staff/groups/aldi/siempre-tarde/src/data/ibus-api/index.js"],"names":["validate","call","NotFoundError","ConnectionError","NoDataError","iBusApi","APP_ID","APP_KEY","__url__","__timeout__","retrieveStopId","stop_id","arguments","name","value","type","notEmpty","optional","timeout","then","response","status","json","ibus","data","undefined","retrieveLineId","line_id"],"mappings":"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","sourcesContent":["import validate from '../../common/validate'\nimport call from '../../common/call'\nimport { NotFoundError, ConnectionError, NoDataError } from '../../common/errors';\n\nconst iBusApi = {\n    APP_ID: null,\n    APP_KEY: null,\n\n    __url__: 'https://api.tmb.cat/v1/ibus',\n    __timeout__: 0,\n\n    retrieveStopId(stop_id) {\n        validate.arguments([\n            { name: 'stop', value: stop_id, type: 'number', notEmpty: true, optional: false }\n        ])\n        \n        return call(`${this.__url__}/stops/${stop_id}?app_id=${this.APP_ID}&app_key=${this.APP_KEY}`, {\n            timeout: this.__timeout__\n        })\n        .then(response => {\n            if (response.status === 200) { \n                return response.json()\n            }  \n            if (response.status === 404) throw new NotFoundError('cannot found')\n            if (response.status === 403) throw new ConnectionError('cannot connect')  \n        })\n        .then( response =>{\n            const {data:{ibus}} = response\n            if (ibus === undefined){ \n                throw new NoDataError('no data recived')\n            } else { return response }\n        })\n\n    },\n\n    retrieveLineId(stop_id, line_id) {\n        validate.arguments([\n            { name: 'stop', value: stop_id, type: 'number', notEmpty: true, optional: false },\n            { name: 'line', value: line_id, type: 'number', notEmpty: true, optional: false }\n        ])\n\n        return call(`${this.__url__}/lines/${line_id}/stops/${stop_id}?app_id=${this.APP_ID}&app_key=${this.APP_KEY}`, {\n            timeout: this.__timeout__\n        })\n        .then(response => {\n            if (response.status === 200) { \n                return response.json()\n            }  \n            if (response.status === 404) throw new NotFoundError('cannot found')\n            if (response.status === 403) throw new ConnectionError('cannot connect') \n        })\n        .then( response =>{\n                \n            const {data:{ibus}} = response\n            if (ibus === undefined){ \n                throw new NoDataError('no data recived')             \n            } else { return response }\n        })\n    }\n}\n\nexport default iBusApi"]},"metadata":{},"sourceType":"module"}
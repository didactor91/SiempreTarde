{"ast":null,"code":"import { ValueError, RequirementError, FormatError } from '../errors';\nconst validate = {\n  arguments(args) {\n    args.forEach(({\n      name,\n      value,\n      type,\n      notEmpty,\n      optional\n    }) => {\n      if (value !== undefined) {\n        if (typeof value !== type) throw TypeError(\"\".concat(name, \" \").concat(value, \" is not a \").concat(type));\n        if (notEmpty) if (type === 'string') {\n          if (!value.trim().length) throw new ValueError(\"\".concat(name, \" is empty\"));\n        } else if (type === 'object') if (!Object.keys(value).length) throw new ValueError(\"\".concat(name, \" is empty\"));\n      } else if (!optional) throw new RequirementError(\"\".concat(name, \" is not optional\"));\n    });\n  },\n\n  email(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (!re.test(String(email))) throw new FormatError(\"\".concat(email, \" is not an e-mail\"));\n  },\n\n  url(url) {\n    const re = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/;\n    if (!re.test(String(url))) throw new FormatError(\"\".concat(url, \" is not a url\"));\n  }\n\n};\nexport default validate;","map":{"version":3,"sources":["/Users/didactor/Documents/skylab/bootcamp/collab/skylab-bootcamp-201904/staff/groups/aldi/siempre-tarde/src/common/validate/index.js"],"names":["ValueError","RequirementError","FormatError","validate","arguments","args","forEach","name","value","type","notEmpty","optional","undefined","TypeError","trim","length","Object","keys","email","re","test","String","url"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,gBAArB,EAAuCC,WAAvC,QAA0D,WAA1D;AAEA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,SAAS,CAACC,IAAD,EAAO;AACZA,IAAAA,IAAI,CAACC,OAAL,CAAa,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA;AAA/B,KAAD,KAA+C;AACxD,UAAIH,KAAK,KAAKI,SAAd,EAAyB;AACrB,YAAI,OAAOJ,KAAP,KAAiBC,IAArB,EAA2B,MAAMI,SAAS,WAAIN,IAAJ,cAAYC,KAAZ,uBAA8BC,IAA9B,EAAf;AAE3B,YAAIC,QAAJ,EACI,IAAID,IAAI,KAAK,QAAb,EAAuB;AACnB,cAAI,CAACD,KAAK,CAACM,IAAN,GAAaC,MAAlB,EAA0B,MAAM,IAAIf,UAAJ,WAAkBO,IAAlB,eAAN;AAC7B,SAFD,MAEO,IAAIE,IAAI,KAAK,QAAb,EACH,IAAI,CAACO,MAAM,CAACC,IAAP,CAAYT,KAAZ,EAAmBO,MAAxB,EAAgC,MAAM,IAAIf,UAAJ,WAAkBO,IAAlB,eAAN;AAC3C,OARD,MAQO,IAAI,CAACI,QAAL,EAAe,MAAM,IAAIV,gBAAJ,WAAwBM,IAAxB,sBAAN;AACzB,KAVD;AAWH,GAbY;;AAebW,EAAAA,KAAK,CAACA,KAAD,EAAQ;AACT,UAAMC,EAAE,GAAG,yJAAX;AAEA,QAAI,CAACA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAd,CAAL,EAA6B,MAAM,IAAIhB,WAAJ,WAAmBgB,KAAnB,uBAAN;AAChC,GAnBY;;AAqBbI,EAAAA,GAAG,CAACA,GAAD,EAAM;AACL,UAAMH,EAAE,GAAG,mFAAX;AAEA,QAAI,CAACA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACC,GAAD,CAAd,CAAL,EAA2B,MAAM,IAAIpB,WAAJ,WAAmBoB,GAAnB,mBAAN;AAC9B;;AAzBY,CAAjB;AA4BA,eAAenB,QAAf","sourcesContent":["import { ValueError, RequirementError, FormatError } from '../errors'\n\nconst validate = {\n    arguments(args) {\n        args.forEach(({ name, value, type, notEmpty, optional }) => {\n            if (value !== undefined) {\n                if (typeof value !== type) throw TypeError(`${name} ${value} is not a ${type}`)\n\n                if (notEmpty)\n                    if (type === 'string') {\n                        if (!value.trim().length) throw new ValueError(`${name} is empty`)\n                    } else if (type === 'object')\n                        if (!Object.keys(value).length) throw new ValueError(`${name} is empty`)\n            } else if (!optional) throw new RequirementError(`${name} is not optional`)\n        })\n    },\n\n    email(email) {\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n        if (!re.test(String(email))) throw new FormatError(`${email} is not an e-mail`)\n    },\n\n    url(url) {\n        const re = /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\n\n        if (!re.test(String(url))) throw new FormatError(`${url} is not a url`)\n    }\n}\n\nexport default validate"]},"metadata":{},"sourceType":"module"}